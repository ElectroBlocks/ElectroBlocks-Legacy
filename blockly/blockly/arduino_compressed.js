// Do not edit this file; automatically generated by build.py.
'use strict';

Blockly.Arduino=new Blockly.Generator("Arduino");Blockly.Arduino.addReservedWords("setup,loop,if,else,for,switch,case,while,do,break,continue,return,goto,define,include,HIGH,LOW,INPUT,OUTPUT,INPUT_PULLUP,true,false,interger, constants,floating,point,void,bookean,char,unsigned,byte,int,word,long,float,double,string,String,array,static, volatile,const,sizeof,pinMode,digitalWrite,digitalRead,analogReference,analogRead,analogWrite,tone,noTone,shiftOut,shitIn,pulseIn,millis,micros,delay,delayMicroseconds,min,max,abs,constrain,map,pow,sqrt,sin,cos,tan,randomSeed,random,lowByte,highByte,bitRead,bitWrite,bitSet,bitClear,bit,attachInterrupt,detachInterrupt,interrupts,noInterrupts");
Blockly.Arduino.ORDER_ATOMIC=0;Blockly.Arduino.ORDER_UNARY_POSTFIX=1;Blockly.Arduino.ORDER_UNARY_PREFIX=2;Blockly.Arduino.ORDER_MULTIPLICATIVE=3;Blockly.Arduino.ORDER_ADDITIVE=4;Blockly.Arduino.ORDER_SHIFT=5;Blockly.Arduino.ORDER_RELATIONAL=6;Blockly.Arduino.ORDER_EQUALITY=7;Blockly.Arduino.ORDER_BITWISE_AND=8;Blockly.Arduino.ORDER_BITWISE_XOR=9;Blockly.Arduino.ORDER_BITWISE_OR=10;Blockly.Arduino.ORDER_LOGICAL_AND=11;Blockly.Arduino.ORDER_LOGICAL_OR=12;Blockly.Arduino.ORDER_CONDITIONAL=13;
Blockly.Arduino.ORDER_ASSIGNMENT=14;Blockly.Arduino.ORDER_NONE=99;var profile={arduino:{description:"Arduino standard-compatible board",digital:[["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["11","11"],["12","12"],["13","13"],["A0","A0"],["A1","A1"],["A2","A2"],["A3","A3"],["A4","A4"],["A5","A5"]],analog:[["A0","A0"],["A1","A1"],["A2","A2"],["A3","A3"],["A4","A4"],["A5","A5"]],serial:9600},arduino_mega:{description:"Arduino Mega-compatible board"}};
profile["default"]=profile.arduino;
Blockly.Arduino.init=function(a){Blockly.Arduino.definitions_=Object.create(null);Blockly.Arduino.setups_=Object.create(null);Blockly.Arduino.variableDB_?Blockly.Arduino.variableDB_.reset():Blockly.Arduino.variableDB_=new Blockly.Names(Blockly.Arduino.RESERVED_WORDS_);for(var b=[],c=[],d=Blockly.mainWorkspace.getAllBlocks(),e=0;e<d.length;e+=1){if("variables_create"===d[e].type||"variables_create_global"===d[e].type){var f=Blockly.Arduino.variableDB_.getName(d[e].getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);
b[b.length]=d[e].getFieldValue("DATA TYPE")+" "+f+";\n";c.push(f)}if("variables_create_array"===d[e].type){var g=Blockly.Arduino.valueToCode(d[e],"SIZE",Blockly.Arduino.ORDER_ASSIGNMENT)||"0";f=Blockly.Arduino.variableDB_.getName(d[e].getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);b[b.length]=d[e].getFieldValue("DATA TYPE")+" "+f+"["+g+"]; \n";c.push(f)}}a=Blockly.Variables.allVariables(a);for(e=0;e<a.length;e+=1)d=Blockly.Arduino.variableDB_.getName(a[e],Blockly.Variables.NAME_TYPE),-1===c.indexOf(d)&&
(b[b.length]="int "+a[e]+";");Blockly.Arduino.definitions_.variables=b.join("\n")};
Blockly.Arduino.finish=function(a){a="  "+a.replace(/\n/g,"\n  ");a=a.replace(/\n\s+$/,"\n");a="void loop() \n{\n"+a+"\n}";var b=[],c=[],d;for(d in Blockly.Arduino.definitions_){var e=Blockly.Arduino.definitions_[d];e.match(/^#include/)?b.push(e):c.push(e)}e=[];for(d in Blockly.Arduino.setups_)e.push(Blockly.Arduino.setups_[d]);return(b.join("\n")+"\n\n"+c.join("\n")+"\nvoid setup() \n{\n  "+e.join("\n  ")+"\n}\n\n").replace(/\n\n+/g,"\n\n").replace(/\n*$/,"\n\n\n")+a};
Blockly.Arduino.scrubNakedValue=function(a){return a+";\n"};Blockly.Arduino.quote_=function(a){a=a.replace(/\\/g,"\\\\").replace(/\n/g,"\\\n").replace(/\$/g,"\\$").replace(/"/g,'\\"').replace(/'/g,"\\'");return'"'+a+'"'};
Blockly.Arduino.scrub_=function(a,b){if(null===b)return"";var c="";if(!a.outputConnection||!a.outputConnection.targetConnection){var d=a.getCommentText();d&&(c+=Blockly.Arduino.prefixLines(d,"// ")+"\n");for(var e=0;e<a.inputList.length;e++)a.inputList[e].type==Blockly.INPUT_VALUE&&(d=a.inputList[e].connection.targetBlock())&&(d=Blockly.Arduino.allNestedComments(d))&&(c+=Blockly.Arduino.prefixLines(d,"// "))}e=a.nextConnection&&a.nextConnection.targetBlock();e=Blockly.Arduino.blockToCode(e);return c+
b+e};Blockly.Arduino.loops={};
Blockly.Arduino.controls_for=function(){var a=Blockly.Arduino.variableDB_.getName(this.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),b=Blockly.Arduino.valueToCode(this,"FROM",Blockly.Arduino.ORDER_ASSIGNMENT)||"0",c=Blockly.Arduino.valueToCode(this,"TO",Blockly.Arduino.ORDER_ASSIGNMENT)||"0",d=Blockly.Arduino.valueToCode(this,"BY",Blockly.Arduino.ORDER_ASSIGNMENT)||"0",e=Blockly.Arduino.statementToCode(this,"DO");Blockly.Arduino.INFINITE_LOOP_TRAP&&(e=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+
this.id+"'")+e);var f="string"===typeof b||"string"===typeof c||parseFloat(b)<=parseFloat(c);return"for ("+a+" = "+b+"; "+a+(f?" <= ":" >= ")+c+"; "+a+(f?" += ":" =- ")+Math.abs(parseInt(d))+") {\n"+e+"}\n"};
Blockly.Arduino.controls_whileUntil=function(){var a="UNTIL"==this.getFieldValue("MODE"),b=Blockly.Arduino.valueToCode(this,"BOOL",a?Blockly.Arduino.ORDER_LOGICAL_NOT:Blockly.Arduino.ORDER_NONE)||"false",c=Blockly.Arduino.statementToCode(this,"DO");Blockly.Arduino.INFINITE_LOOP_TRAP&&(c=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+c);a&&(b="!"+b);return"while ("+b+") {\n"+c+"}\n"};Blockly.Arduino.water_sensor={};
Blockly.Arduino.water_sensor_setup=function(a){Blockly.Arduino._serial_setup();a=a.getFieldValue("PIN")||"A1";Blockly.Arduino.definitions_.define_water_sensor="#include <HygrometerSensor.h>";Blockly.Arduino.definitions_.water_sensor_setup="HygrometerSensor analog_rain_drop(HygrometerSensor::ANALOG, "+a+");\n";Blockly.Arduino.setups_.water_sensor_setup='if (!analog_rain_drop.setAnalogParameters(ANALOG_HUMIDITY_MIN, ANALOG_HUMIDITY_MAX, 800)) { \n\tSerial.print("Error while setting Analog parameters\\n");\n}\nint min, max, is_raining; \nanalog_rain_drop.getAnalogParameters(min, max, is_raining); \nSerial.print("Minimum analog value: "); \nSerial.print(min, DEC); \nSerial.print("\\nMaximum analog value: "); \nSerial.print(max, DEC); \nSerial.print("\\nValue used as switch from \'dry\' to \'is raining\': "); \nSerial.print(is_raining, DEC); \n';return""};
Blockly.Arduino.water_sensor_read_humidity_value=function(){return["analog_rain_drop.readHumidityValue()",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.water_sensor_read_percentage_humidity=function(){return["analog_rain_drop.readPercentageHumidity()",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.water_sensor_is_humid=function(){return["analog_rain_drop.isHumid()",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.variables={};Blockly.Arduino.variables_get=function(){return[Blockly.Arduino.variableDB_.getName(this.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.variables_declare=function(){var a=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT)||"0",b=Blockly.Arduino.variableDB_.getName(this.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);Blockly.Arduino.setups_["setup_var"+b]=b+" = "+a+";\n";return""};
Blockly.Arduino.variables_set=function(){var a=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT)||"0";return Blockly.Arduino.variableDB_.getName(this.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE)+" = "+a+";\n"};
Blockly.Arduino.variables_create_global=function(){var a=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT)||"0",b=Blockly.Arduino.variableDB_.getName(this.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);Blockly.Arduino.setups_["setup_var"+b]=b+" = "+a+";\n";return""};
Blockly.Arduino.variables_create=function(){var a=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT)||"0";return Blockly.Arduino.variableDB_.getName(this.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE)+" = "+a+";\n"};Blockly.Arduino.variables_create_array=function(){return""};Blockly.Arduino.logic={};
Blockly.Arduino.controls_if=function(){var a=0,b=Blockly.Arduino.valueToCode(this,"IF"+a,Blockly.Arduino.ORDER_NONE)||"false",c=Blockly.Arduino.statementToCode(this,"DO"+a),d="if ("+b+") {\n"+c+"\n}";for(a=1;a<=this.elseifCount_;a++)b=Blockly.Arduino.valueToCode(this,"IF"+a,Blockly.Arduino.ORDER_NONE)||"false",c=Blockly.Arduino.statementToCode(this,"DO"+a),d+=" else if ("+b+") {\n"+c+"}";this.elseCount_&&(c=Blockly.Arduino.statementToCode(this,"ELSE"),d+=" else {\n"+c+"\n}");return d+"\n"};
Blockly.Arduino.logic_compare=function(){var a=this.getFieldValue("OP");a=Blockly.Arduino.logic_compare.OPERATORS[a];var b="=="==a||"!="==a?Blockly.Arduino.ORDER_EQUALITY:Blockly.Arduino.ORDER_RELATIONAL,c=Blockly.Arduino.valueToCode(this,"A",b)||"0",d=Blockly.Arduino.valueToCode(this,"B",b)||"0";return[c+" "+a+" "+d,b]};Blockly.Arduino.logic_compare.OPERATORS={EQ:"==",NEQ:"!=",LT:"<",LTE:"<=",GT:">",GTE:">="};
Blockly.Arduino.logic_operation=function(){var a="AND"==this.getFieldValue("OP")?"&&":"||",b="&&"==a?Blockly.Arduino.ORDER_LOGICAL_AND:Blockly.Arduino.ORDER_LOGICAL_OR,c=Blockly.Arduino.valueToCode(this,"A",b)||"false",d=Blockly.Arduino.valueToCode(this,"B",b)||"false";return[c+" "+a+" "+d,b]};Blockly.Arduino.logic_negate=function(){var a=Blockly.Arduino.ORDER_UNARY_PREFIX;return["!"+(Blockly.Arduino.valueToCode(this,"BOOL",a)||"false"),a]};
Blockly.Arduino.logic_boolean=function(){return["TRUE"==this.getFieldValue("BOOL")?"true":"false",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.logic_null=function(){return["NULL",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.wifi={};
Blockly.Arduino.wifi_setup=function(a){var b=Blockly.Arduino.valueToCode(a,"WIFI NAME",Blockly.Arduino.ORDER_ATOMIC);a=Blockly.Arduino.valueToCode(a,"WIFI PASSWORD",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.definitions_.define_wifi_setup='#include <ESP8266HTTPClient.h>\n#include <ESP8266WiFi.h>\n\n\nString webRequest(const char * httpVerb, String url,String contentType, String requestBody) {\n\tHTTPClient http; \n\thttp.begin(url); \n\thttp.setUserAgent("Arduino/1.0");\n\thttp.addHeader("Content-Type", contentType); \n\tif (httpVerb == "GET") { \n\t\thttp.GET(); \n\t} \n\telse { \n\t\thttp.sendRequest(httpVerb, requestBody); \n\t} \n\treturn http.getString(); \n} \n';Blockly.Arduino._serial_setup();
Blockly.Arduino.setups_.wifi_setup="WiFi.begin("+b+", "+a+'); \n  Serial.print("Connecting WIFI: "); \n  while (WiFi.status() != WL_CONNECTED) { \n\tSerial.print(".");\n\tdelay(500); \n  } \n  Serial.println("CONNECTED"); \n';return""};
Blockly.Arduino.wifi_request=function(a){var b=a.getFieldValue("HTTP VERB"),c=a.getFieldValue("CONTENT TYPE"),d=Blockly.Arduino.valueToCode(a,"URL",Blockly.Arduino.ORDER_ATOMIC);a=Blockly.Arduino.valueToCode(a,"REQUEST BODY",Blockly.Arduino.ORDER_ATOMIC)||"";return['webRequest("'+b+'", '+d+', "'+c+'", '+a+")",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.grove={};Blockly.Arduino.grove_led=function(){var a=this.getFieldValue("PIN"),b=this.getFieldValue("STAT");Blockly.Arduino.setups_["setup_green_led_"+a]="pinMode("+a+", OUTPUT);";return"digitalWrite("+a+","+b+");\n"};Blockly.Arduino.grove_button=function(){var a=this.getFieldValue("PIN");Blockly.Arduino.setups_["setup_button_"+a]="pinMode("+a+", INPUT);";return["digitalRead("+a+")",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.grove_rotary_angle=function(){return["analogRead("+this.getFieldValue("PIN")+")",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.grove_tilt_switch=function(){var a=this.getFieldValue("PIN");Blockly.Arduino.setups_["setup_tilt_switch_"+a]="pinMode("+a+", INPUT);";return["digitalRead("+a+")",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.grove_piezo_buzzer=function(){var a=this.getFieldValue("PIN"),b=this.getFieldValue("STAT");Blockly.Arduino.setups_["setup_piezo_buzzer_"+a]="pinMode("+a+", OUTPUT);";return"digitalWrite("+a+","+b+");\n"};Blockly.Arduino.grove_relay=function(){var a=this.getFieldValue("PIN"),b=this.getFieldValue("STAT");Blockly.Arduino.setups_["setup_relay_"+a]="pinMode("+a+", OUTPUT);";return"digitalWrite("+a+","+b+");\n"};
Blockly.Arduino.grove_temporature_sensor=function(){var a=this.getFieldValue("PIN");return["round((1/(log((float)(1023-analogRead("+a+"))*10000/analogRead("+a+"))/10000)/3975+1/298.15)-273.15)",Blockly.Arduino.ORDER_ATOMIC]};
var _get_next_pin=function(a){var b=a;b=parseInt(b)?parseInt(a)+1:"A"+(parseInt(b.slice(1,b.length))+1);a=profile["default"].digital.length;for(var c=!0,d=0;d<a;d++)profile["default"].digital[d][1]==b&&(c=!1);return c?(alert("Grove Sensor needs PIN#+1 port, current setting is out of bound."),null):b};
Blockly.Arduino.grove_serial_lcd_print=function(){var a=this.getFieldValue("PIN"),b=Blockly.Arduino.valueToCode(this,"TEXT",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"''",c=Blockly.Arduino.valueToCode(this,"TEXT2",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"''",d=Blockly.Arduino.valueToCode(this,"DELAY_TIME",Blockly.Arduino.ORDER_ATOMIC)||"1000";Blockly.Arduino.definitions_.define_seriallcd="#include <SerialLCD.h>\n";Blockly.Arduino.definitions_.define_softwareserial="#include <SoftwareSerial.h>\n";var e=
_get_next_pin(a);Blockly.Arduino.definitions_["var_lcd_"+a]="SerialLCD slcd_"+a+"("+a+","+e+");\n";Blockly.Arduino.setups_["setup_lcd_"+a]="slcd_"+a+".begin();\n";a="slcd_"+a+".backlight();\n"+("slcd_"+a+".setCursor(0,0);\n")+("slcd_"+a+".print("+b+");\n")+("slcd_"+a+".setCursor(0,1);\n")+("slcd_"+a+".print("+c+");\n");return a+="delay("+d+");\n"};
Blockly.Arduino.grove_serial_lcd_power=function(){var a=this.getFieldValue("PIN"),b=this.getFieldValue("STAT");Blockly.Arduino.definitions_.define_seriallcd="#include <SerialLCD.h>\n";Blockly.Arduino.definitions_.define_softwareserial="#include <SoftwareSerial.h>\n";var c=_get_next_pin(a);Blockly.Arduino.definitions_["var_lcd"+a]="SerialLCD slcd_"+a+"("+a+","+c+");\n";a="slcd_"+a;return"ON"===b?a+".Power();\n":a+".noPower();\n"};
Blockly.Arduino.grove_serial_lcd_effect=function(){var a=this.getFieldValue("PIN"),b=this.getFieldValue("STAT");Blockly.Arduino.definitions_.define_seriallcd="#include <SerialLCD.h>\n";Blockly.Arduino.definitions_.define_softwareserial="#include <SoftwareSerial.h>\n";var c=_get_next_pin(a);Blockly.Arduino.definitions_["var_lcd"+a]="SerialLCD slcd_"+a+"("+a+","+c+");\n";a="slcd_"+a;return"LEFT"===b?a+".scrollDisplayLeft();\n":"RIGHT"===b?a+".scrollDisplayRight();\n":a+".autoscroll();\n"};
Blockly.Arduino.grove_sound_sensor=function(){return["analogRead("+this.getFieldValue("PIN")+")",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.grove_pir_motion_sensor=function(){var a=this.getFieldValue("PIN");Blockly.Arduino.setups_["setup_input_"+a]="pinMode("+a+", INPUT);";return["digitalRead("+a+")",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.grove_line_finder=function(){var a=this.getFieldValue("PIN");Blockly.Arduino.setups_["setup_input_"+a]="pinMode("+a+", INPUT);";return["digitalRead("+a+")",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.grove_ultrasonic_ranger=function(){var a=this.getFieldValue("PIN"),b=this.getFieldValue("UNIT");Blockly.Arduino.definitions_.define_ultrasonic="#include <Ultrasonic.h>\n";Blockly.Arduino.definitions_["var_ultrasonic"+a]="Ultrasonic ultrasonic_"+a+"("+a+");";return["cm"===b?"ultrasonic_"+a+".MeasureInCentimeters()":"ultrasonic_"+a+".MeasureInInches()",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.grove_motor_shield=function(){var a=this.getFieldValue("DIRECTION");Blockly.Arduino.setups_.setup_motor="pinMode(8,OUTPUT);//I1\n  pinMode(11,OUTPUT);//I2\n  pinMode(9,OUTPUT);//speedPinA\n  pinMode(12,OUTPUT);//I3\n  pinMode(13,OUTPUT);//i4\n  pinMode(10,OUTPUT);//speedPinB\n";var b="";"forward"===a?(Blockly.Arduino.definitions_.define_forward="void forward()\n{\n  analogWrite(9,127);//input a simulation value to set the speed\n  analogWrite(10,127);\n  digitalWrite(13,HIGH);//turn DC Motor B move clockwise\n  digitalWrite(12,LOW);\n  digitalWrite(11,LOW);//turn DC Motor A move anticlockwise\n  digitalWrite(8,HIGH);\n}\n",
b="forward();\n"):"right"===a?(Blockly.Arduino.definitions_.define_right="void right()\n{\n  analogWrite(9,127);//input a simulation value to set the speed\n  analogWrite(10,127);\n  digitalWrite(13,LOW);//turn DC Motor B move anticlockwise\n  digitalWrite(12,HIGH);\n  digitalWrite(11,LOW);//turn DC Motor A move anticlockwise\n  digitalWrite(8,HIGH);\n}\n\n",b="right();\n"):"left"===a?(Blockly.Arduino.definitions_.define_left="void left()\n{\n  analogWrite(9,127);//input a simulation value to set the speed\n  analogWrite(10,127);\n  digitalWrite(13,HIGH);//turn DC Motor B move clockwise\n  digitalWrite(12,LOW);\n  digitalWrite(11,HIGH);//turn DC Motor A move clockwise\n  digitalWrite(8,LOW);\n}\n\n",
b="left();\n"):"backward"===a?(Blockly.Arduino.definitions_.define_backward="void backward()\n{\n  analogWrite(9,127);//input a simulation value to set the speed\n  analogWrite(10,127);\n  digitalWrite(13,LOW);//turn DC Motor B move anticlockwise\n  digitalWrite(12,HIGH);\n  digitalWrite(11,HIGH);//turn DC Motor A move clockwise\n  digitalWrite(8,LOW);\n}\n\n",b="backward();\n"):"stop"===a&&(Blockly.Arduino.definitions_.define_stop="void stop()\n{\ndigitalWrite(9,LOW);// Unenble the pin, to stop the motor. this should be done to avid damaging the motor.\ndigitalWrite(10,LOW);\ndelay(1000);\n}\n\n",
b="stop();\n");return b};Blockly.Arduino.grove_thumb_joystick=function(){var a=this.getFieldValue("PIN");return["analogRead("+("y"===this.getFieldValue("AXIS")?_get_next_pin(a):a)+")",Blockly.Arduino.ORDER_ATOMIC]};function hexToR(a){return parseInt(cutHex(a).substring(0,2),16)}function hexToG(a){return parseInt(cutHex(a).substring(2,4),16)}function hexToB(a){return parseInt(cutHex(a).substring(4,6),16)}function cutHex(a){return"#"==a.charAt(0)?a.substring(1,7):a}
Blockly.Arduino.grove_rgb_led=function(){var a=this.getFieldValue("PIN"),b=_get_next_pin(a);Blockly.Arduino.setups_["setup_input_"+a]="pinMode("+a+", OUTPUT);";Blockly.Arduino.setups_["setup_input_"+b]="pinMode("+b+", OUTPUT);";Blockly.Arduino.definitions_.define_uint8="#define uint8 unsigned char";Blockly.Arduino.definitions_.define_uint16="#define uint16 unsigned int";Blockly.Arduino.definitions_.define_uint32="#define uint32 unsigned long int";Blockly.Arduino.definitions_["define_clkproduce_"+
a]="void ClkProduce_"+a+"(void)\n{\n  digitalWrite("+a+", LOW);\n  delayMicroseconds(20);\n  digitalWrite("+a+", HIGH);\n  delayMicroseconds(20);\n}\n";Blockly.Arduino.definitions_["define_send32zero_"+a]="void Send32Zero_"+a+"(void)\n{\n  uint8 i;\n  for (i=0; i<32; i++)\n  {\n    digitalWrite("+b+", LOW);\n    ClkProduce_"+a+"();\n  }\n}\n";Blockly.Arduino.definitions_.define_taskanticode="uint8 TakeAntiCode(uint8 dat)\n{\n  uint8 tmp = 0;\n  if ((dat & 0x80) == 0)\n  {\n    tmp |= 0x02;\n  }\n  \n  if ((dat & 0x40) == 0)\n  {\n    tmp |= 0x01;\n  }\n  return tmp;\n}\n";
Blockly.Arduino.definitions_["define_datasend_"+a]="// gray data\nvoid DatSend_"+a+"(uint32 dx)\n{\n  uint8 i;\n  for (i=0; i<32; i++)\n  {\n    if ((dx & 0x80000000) != 0)\n    {\n      digitalWrite("+b+", HIGH);\n    }\n    else\n    {\n      digitalWrite("+b+", LOW);\n    }\n  dx <<= 1;\n  ClkProduce_"+a+"();\n  }\n}\n";Blockly.Arduino.definitions_["define_datadealwithsend_"+a]="// data processing\nvoid DataDealWithAndSend_"+a+"(uint8 r, uint8 g, uint8 b)\n{\n  uint32 dx = 0;\n  dx |= (uint32)0x03 << 30;             // highest two bits 1\uff0cflag bits\n  dx |= (uint32)TakeAntiCode(b) << 28;\n  dx |= (uint32)TakeAntiCode(g) << 26;\n  dx |= (uint32)TakeAntiCode(r) << 24;\n\n  dx |= (uint32)b << 16;\n  dx |= (uint32)g << 8;\n  dx |= r;\n\n  DatSend_"+
a+"(dx);\n}\n";b="Send32Zero_"+a+"(); // begin\n";if(0==this.itemCount_)return"";for(var c=0;c<this.itemCount_;c++){var d=this.getFieldValue("RGB"+c);b+="DataDealWithAndSend_"+a+"("+hexToR(d)+", "+hexToG(d)+", "+hexToB(d)+"); // first node data\n"}return b+("Send32Zero_"+a+"();  // send to update data\n")};
Blockly.Arduino.grove_bluetooth_slave=function(){var a=this.getFieldValue("PIN"),b=_get_next_pin(a),c=this.getFieldValue("NAME");this.getFieldValue("PINCODE");var d=Blockly.Arduino.statementToCode(this,"RCV"),e=Blockly.Arduino.statementToCode(this,"SNT");Blockly.Arduino.definitions_.define_softwareserial="#include <SoftwareSerial.h>\n";Blockly.Arduino.definitions_["var_bluetooth_"+a]="SoftwareSerial blueToothSerial_"+a+"("+a+","+b+");\n";Blockly.Arduino.setups_["setup_bluetooth_"+a]="Serial.begin(9600);\n";
Blockly.Arduino.setups_["setup_bluetooth_"+a]+="  pinMode("+a+", INPUT);\n";Blockly.Arduino.setups_["setup_bluetooth_"+a]+="  pinMode("+b+", OUTPUT);\n";Blockly.Arduino.setups_["setup_bluetooth_"+a]+="  setupBlueToothConnection_"+a+"();\n";Blockly.Arduino.definitions_["define_setupBlueToothConnection_"+a]="void setupBlueToothConnection_"+a+"()\n{\n  blueToothSerial_"+a+".begin(38400); //Set BluetoothBee BaudRate to default baud rate 38400\n  blueToothSerial_"+a+'.print("\\r\\n+STWMOD=0\\r\\n"); //set the bluetooth work in slave mode\n  blueToothSerial_'+
a+'.print("\\r\\n+STNA='+c+'\\r\\n"); //set the bluetooth name as "'+c+'"\n  blueToothSerial_'+a+'.print("\\r\\n+STPIN=0000\\r\\n");//Set SLAVE pincode"0000"\n  blueToothSerial_'+a+'.print("\\r\\n+STOAUT=1\\r\\n"); // Permit Paired device to connect me\n  blueToothSerial_'+a+'.print("\\r\\n+STAUTO=0\\r\\n"); // Auto-connection should be forbidden here\n  delay(2000); // This delay is required.\n  blueToothSerial_'+a+'.print("\\r\\n+INQ=1\\r\\n"); //make the slave bluetooth inquirable \n  Serial.println("The slave bluetooth is inquirable!");\n  delay(2000); // This delay is required.\n  blueToothSerial_'+
a+".flush();\n}\n";return"char recvChar_"+a+";\nwhile(1) {\n  if(blueToothSerial_"+a+".available()) {//check if there is any data sent from the remote bluetooth shield\n    recvChar_"+a+" = blueToothSerial_"+a+".read();\n    Serial.print(recvChar_"+a+");\n"+d+"  }\n  if(Serial.available()){//check if there is any data sent from the local serial terminal, you can add the other applications here\n    recvChar_"+a+" = Serial.read();\n    blueToothSerial_"+a+".print(recvChar_"+a+");\n"+e+"  }\n}\n"};Blockly.Arduino.neo_pixel={};
Blockly.Arduino.neo_pixel_setup=function(a){var b=Blockly.Arduino.valueToCode(a,"NUMBER OF LEDS",Blockly.Arduino.ORDER_ATOMIC);a=a.getFieldValue("PIN")||"A1";Blockly.Arduino.definitions_.define_neo_pixel="#include <Adafruit_NeoPixel.h>\n #ifdef __AVR__ \n #include <avr/power.h> \n #endif";Blockly.Arduino.definitions_.neo_pixel_setup="Adafruit_NeoPixel pixels = Adafruit_NeoPixel("+b+","+a+", NEO_GRB + NEO_KHZ800);\n\n";Blockly.Arduino.setups_.neo_pixel="#if defined (__AVR_ATtiny85__) \nif (F_CPU == 16000000) clock_prescale_set(clock_div_1); \n#endif\npixels.begin();\n";return""};
Blockly.Arduino.neo_pixel_set_pixel_color=function(a){var b=Blockly.Arduino.valueToCode(a,"RED",Blockly.Arduino.ORDER_ATOMIC),c=Blockly.Arduino.valueToCode(a,"BLUE",Blockly.Arduino.ORDER_ATOMIC),d=Blockly.Arduino.valueToCode(a,"GREEN",Blockly.Arduino.ORDER_ATOMIC);return"pixels.setPixelColor("+Blockly.Arduino.valueToCode(a,"PIXEL",Blockly.Arduino.ORDER_ATOMIC)+", pixels.Color("+b+","+d+","+c+"));\n pixels.show(); \n"};Blockly.Arduino.list={};Blockly.Arduino.lists_setIndex=function(){var a=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT)||"0",b=Blockly.Arduino.valueToCode(this,"VARIABLE",Blockly.Arduino.ORDER_ASSIGNMENT),c=Blockly.Arduino.valueToCode(this,"INDEX",Blockly.Arduino.ORDER_ASSIGNMENT)||"0";return b+"["+c+"] = "+a+"; \n"};
Blockly.Arduino.lists_getIndex=function(){var a=Blockly.Arduino.valueToCode(this,"VARIABLE",Blockly.Arduino.ORDER_ASSIGNMENT),b=Blockly.Arduino.valueToCode(this,"INDEX",Blockly.Arduino.ORDER_ASSIGNMENT)||"0";return[a+"["+b+"]",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.lists_length=function(){return["sizeof("+Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT)+")",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.ir_remote={};Blockly.Arduino.ir_remote_setup=function(a){a=a.getFieldValue("PIN")||"A1";Blockly.Arduino.definitions_.define_ir_remote="#include <IRremote.h> \nIRrecv irReceiver("+a+");\ndecode_results result;\n";Blockly.Arduino.setups_.setup_ir_remote="irReceiver.enableIRIn(); \n";return""};Blockly.Arduino.ir_remote_has_reading=function(){return["irReceiver.decode(&result)",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.ir_remote_get_hex=function(){return["String(result.value, HEX)",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.ir_remote_can_read_again=function(){return"irReceiver.resume();\n"};Blockly.Arduino.liquid_crystal={};var numberOfRows=4,numberOfColumns=20,memoryAddressLCDType="0x3F";
function setUpI2CLiquidCrystal(){Blockly.Arduino.definitions_.define_wire="#include <Wire.h>\n";Blockly.Arduino.definitions_.define_liquid_crystal_i2c_big="#include <LiquidCrystal_I2C.h>\n";Blockly.Arduino.definitions_.liquid_crystal_ic2_lcd_object="LiquidCrystal_I2C lcd("+memoryAddressLCDType+","+numberOfRows+","+numberOfColumns+");";Blockly.Arduino.setups_.liquid_crystal_ic2_lcd="lcd.init();\nlcd.backlight(); \n"}
Blockly.Arduino.liquid_crystal_ic2_lcd_setup=function(a){numberOfRows=Blockly.Arduino.valueToCode(a,"Number of Rows",Blockly.Arduino.ORDER_ATOMIC);numberOfColumns=Blockly.Arduino.valueToCode(a,"Number of Columns",Blockly.Arduino.ORDER_ATOMIC);memoryAddressLCDType=this.getFieldValue("memory address lcd type").toUpperCase();setUpI2CLiquidCrystal();return""};
Blockly.Arduino.liquid_crystal_ic2_lcd=function(a){function b(a,b){return'""'!==b?"lcd.setCursor(0, "+a+"); \nlcd.print("+b+"); \n":""}setUpI2CLiquidCrystal();var c=Blockly.Arduino.valueToCode(a,"Row 1",Blockly.Arduino.ORDER_ATOMIC),d=Blockly.Arduino.valueToCode(a,"Row 2",Blockly.Arduino.ORDER_ATOMIC),e=Blockly.Arduino.valueToCode(a,"Row 3",Blockly.Arduino.ORDER_ATOMIC),f=Blockly.Arduino.valueToCode(a,"Row 4",Blockly.Arduino.ORDER_ATOMIC);a=Blockly.Arduino.valueToCode(a,"Delay Time",Blockly.Arduino.ORDER_ATOMIC);
return"lcd.clear(); \n"+b(0,c)+b(1,d)+b(2,e)+b(3,f)+"delay("+a+"); \nlcd.clear(); \n"};Blockly.Arduino.liquid_crystal_ic2_lcd_backlight=function(){setUpI2CLiquidCrystal();return"ON"===this.getFieldValue("backlight").toUpperCase()?"lcd.backlight();\n":"lcd.noBacklight();\n"};Blockly.Arduino.liquid_crystal_ic2_lcd_clear=function(){setUpI2CLiquidCrystal();return"lcd.clear();\n"};
Blockly.Arduino.liquid_crystal_ic2_lcd_set_cursor=function(a){setUpI2CLiquidCrystal();var b=Blockly.Arduino.valueToCode(a,"Row",Blockly.Arduino.ORDER_ATOMIC);return"lcd.setCursor("+Blockly.Arduino.valueToCode(a,"Column",Blockly.Arduino.ORDER_ATOMIC)+","+b+"); \n"};Blockly.Arduino.liquid_crystal_ic2_lcd_print=function(a){setUpI2CLiquidCrystal();return"lcd.print("+Blockly.Arduino.valueToCode(a,"Print Message",Blockly.Arduino.ORDER_ATOMIC)+"); \n"};
Blockly.Arduino.liquid_crystal_ic2_lcd_blink=function(){setUpI2CLiquidCrystal();return"YES"===this.getFieldValue("blink").toUpperCase()?"lcd.blink();\n":"lcd.noBlink();\n"};Blockly.Arduino.liquid_crystal_ic2_lcd_scroll_right=function(){setUpI2CLiquidCrystal();return"lcd.scrollDisplayRight(); \n"};Blockly.Arduino.liquid_crystal_ic2_lcd_scroll_left=function(){setUpI2CLiquidCrystal();return"lcd.scrollDisplayLeft(); \n"};Blockly.Arduino.procedures={};
Blockly.Arduino.procedures_defreturn=function(){var a=Blockly.Arduino.variableDB_.getName(this.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),b=Blockly.Arduino.statementToCode(this,"STACK");Blockly.Arduino.INFINITE_LOOP_TRAP&&(b=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+b);var c=Blockly.Arduino.valueToCode(this,"RETURN",Blockly.Arduino.ORDER_NONE)||"";c&&(c="  return "+c+";\n");for(var d=c?"int":"void",e=[],f=0;f<this.arguments_.length;f++)e[f]="int "+Blockly.Arduino.variableDB_.getName(this.arguments_[f],
Blockly.Variables.NAME_TYPE);b=d+" "+a+"("+e.join(", ")+") {\n"+b+c+"}\n";b=Blockly.Arduino.scrub_(this,b);Blockly.Arduino.definitions_[a]=b;return null};Blockly.Arduino.procedures_defnoreturn=Blockly.Arduino.procedures_defreturn;
Blockly.Arduino.procedures_callreturn=function(){for(var a=Blockly.Arduino.variableDB_.getName(this.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),b=[],c=0;c<this.arguments_.length;c++)b[c]=Blockly.Arduino.valueToCode(this,"ARG"+c,Blockly.Arduino.ORDER_NONE)||"null";return[a+"("+b.join(", ")+")",Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.procedures_callnoreturn=function(){for(var a=Blockly.Arduino.variableDB_.getName(this.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),b=[],c=0;c<this.arguments_.length;c++)b[c]=Blockly.Arduino.valueToCode(this,"ARG"+c,Blockly.Arduino.ORDER_NONE)||"null";return a+"("+b.join(", ")+");\n"};
Blockly.Arduino.procedures_ifreturn=function(){var a="if ("+(Blockly.Arduino.valueToCode(this,"CONDITION",Blockly.Arduino.ORDER_NONE)||"false")+") {\n";if(this.hasReturnValue_){var b=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_NONE)||"null";a+="  return "+b+";\n"}else a+="  return;\n";return a+"}\n"};Blockly.Arduino.led_matrix={};function setupLedMatrix(){Blockly.Arduino.definitions_.define_led_matrix="#include <LedControlMS.h>\n";Blockly.Arduino.definitions_.led_matrix_setup="LedControl lc=LedControl(12,11,10,1);\n";Blockly.Arduino.setups_.led_matrix="lc.shutdown(0,false); \nlc.setIntensity(0,8);\nlc.clearDisplay(0);\n"}
Blockly.Arduino.led_matrix_set_column=function(a){setupLedMatrix();var b=Blockly.Arduino.valueToCode(a,"Column Number",Blockly.Arduino.ORDER_ATOMIC);a=Blockly.Arduino.valueToCode(a,"BYTE VALUE",Blockly.Arduino.ORDER_ATOMIC);return"lc.setColumn(0,"+b+", "+a+"); \n"};
Blockly.Arduino.led_matrix_set_row=function(a){setupLedMatrix();var b=Blockly.Arduino.valueToCode(a,"Row Number",Blockly.Arduino.ORDER_ATOMIC);a=Blockly.Arduino.valueToCode(a,"BYTE VALUE",Blockly.Arduino.ORDER_ATOMIC);return"lc.setRow(0,"+b+", "+a+"); \n"};
Blockly.Arduino.led_matrix_set_led=function(a){setupLedMatrix();var b=Blockly.Arduino.valueToCode(a,"Row Number",Blockly.Arduino.ORDER_ATOMIC),c=Blockly.Arduino.valueToCode(a,"Column Number",Blockly.Arduino.ORDER_ATOMIC);a=a.getFieldValue("LIGHT").toLowerCase();return"lc.setLed(0, "+b+", "+c+", "+a+"); \n"};Blockly.Arduino.led_matrix_clear=function(){setupLedMatrix();return"lc.clearDisplay(0); \n"};Blockly.Arduino.temp_humidity={};var pin=7;Blockly.Arduino.temp_humidity_setup=function(a){pin=a.getFieldValue("PIN")||"7";Blockly.Arduino.definitions_.define_temp_humidity="#include <dht.h> \n dht DHT;\n";return""};Blockly.Arduino.temp_humidity_get_reading=function(){return"DHT.read11("+pin+");\n"};Blockly.Arduino.temp_humidity_humidity_percentage=function(){return["DHT.temperature",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.temp_humidity_temp_celsius=function(){return["DHT.humidity",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.rfid={};function setupRFID(){Blockly.Arduino.definitions_.define_rfid='#include "RFIDRdm630.h"';Blockly.Arduino.definitions_.setup_rfid="RFIDRdm630 reader = RFIDRdm630(6,7);\n"}Blockly.Arduino.rfid_scanned_card=function(){setupRFID();return["reader.isAvailable()",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.rfid_tag_number=function(){setupRFID();return["reader.getTag().getTag()",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.rfid_card_number=function(){setupRFID();return["reader.getTag().getCardNumber()",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.math={};Blockly.Arduino.math_byte=function(){for(var a="B",b=1;8>=b;b+=1)a+=this.getFieldValue("BYTE "+b)||"0";return[a,Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.math_number=function(){var a=window.parseFloat(this.getFieldValue("NUM"));return[a,0>a?Blockly.Arduino.ORDER_UNARY_PREFIX:Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.math_parse_int=function(a){return[Blockly.Arduino.valueToCode(a,"String Variable",Blockly.Arduino.ORDER_ATOMIC)+".toInt()",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.math_parse_double=function(a){return[Blockly.Arduino.valueToCode(a,"String Variable",Blockly.Arduino.ORDER_ATOMIC)+".toDouble()",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.math_arithmetic=function(){var a=this.getFieldValue("OP"),b=Blockly.Arduino.math_arithmetic.OPERATORS[a];a=b[0];b=b[1];var c=Blockly.Arduino.valueToCode(this,"A",b)||"0",d=Blockly.Arduino.valueToCode(this,"B",b)||"0";return a?[c+a+d,b]:["Math.pow("+c+", "+d+")",Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.math_arithmetic.OPERATORS={ADD:[" + ",Blockly.Arduino.ORDER_ADDITIVE],MINUS:[" - ",Blockly.Arduino.ORDER_ADDITIVE],MULTIPLY:[" * ",Blockly.Arduino.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",Blockly.Arduino.ORDER_MULTIPLICATIVE],POWER:[null,Blockly.Arduino.ORDER_NONE]};Blockly.Arduino.math_random_int=function(a){var b=Blockly.Arduino.valueToCode(a,"FROM",Blockly.Arduino.ORDER_ATOMIC);a=Blockly.Arduino.valueToCode(a,"TO",Blockly.Arduino.ORDER_ATOMIC);return["random("+b+", "+a+")",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.base={};Blockly.Arduino.base_delay=function(){return"delay("+(Blockly.Arduino.valueToCode(this,"DELAY_TIME",Blockly.Arduino.ORDER_ATOMIC)||"1000")+");\n"};Blockly.Arduino.base_map=function(){var a=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE),b=Blockly.Arduino.valueToCode(this,"DMAX",Blockly.Arduino.ORDER_ATOMIC);return["map("+a+", 0, 1024, 0, "+b+")",Blockly.Arduino.ORDER_NONE]};
Blockly.Arduino.inout_buildin_led=function(){var a=this.getFieldValue("STAT");Blockly.Arduino.setups_.setup_output_13="pinMode(13, OUTPUT);";return"digitalWrite(13, "+a+");\n"};Blockly.Arduino.inout_digital_write=function(){var a=this.getFieldValue("PIN"),b=this.getFieldValue("STAT");Blockly.Arduino.setups_["setup_output_"+a]="pinMode("+a+", OUTPUT);";return"digitalWrite("+a+", "+b+");\n"};
Blockly.Arduino.inout_digital_read=function(){var a=this.getFieldValue("PIN");Blockly.Arduino.setups_["setup_input_"+a]="pinMode("+a+", INPUT);";return["digitalRead("+a+")",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.inout_pulse_in=function(){var a=this.getFieldValue("ECHO"),b=this.getFieldValue("TRIG");Blockly.Arduino.setups_["setup_input_"+a]="pinMode("+a+", INPUT);";Blockly.Arduino.setups_["setup_input_"+b]="pinMode("+b+", OUTPUT);";Blockly.Arduino.definitions_.pulse_in_function="long pulseInSonar(int trigPin, int echoPin) { \n\t\tdigitalWrite(trigPin, LOW);\n\t\tdelayMicroseconds(2); \n\t\tdigitalWrite(trigPin, HIGH); \n\t\tdelayMicroseconds(10); \n\t\tdigitalWrite(trigPin, LOW); \n\t\treturn pulseIn(echoPin, HIGH); \n} \n\n";return["pulseInSonar("+
b+", "+a+")",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.inout_digital_read_pullup_resistor=function(){var a=this.getFieldValue("PIN");Blockly.Arduino.setups_["setup_input_"+a]="pinMode("+a+", INPUT_PULLUP);";return["digitalRead("+a+")",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.inout_analog_write=function(){var a=this.getFieldValue("PIN"),b=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_ATOMIC);return"analogWrite("+a+", "+b+");\n"};
Blockly.Arduino.inout_analog_read=function(){return["analogRead("+this.getFieldValue("PIN")+")",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.inout_tone=function(){var a=this.getFieldValue("PIN"),b=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.setups_["setup_output"+a]="pinMode("+a+", OUTPUT);";return"tone("+a+", "+b+");\n"};
Blockly.Arduino.inout_notone=function(){var a=this.getFieldValue("PIN");Blockly.Arduino.setups_["setup_output"+a]="pinMode("+a+", OUTPUT);";return"noTone("+a+");\n"};Blockly.Arduino.inout_highlow=function(){return["HIGH"==this.getFieldValue("BOOL")?"HIGH":"LOW",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.servo_move=function(){var a=this.getFieldValue("PIN"),b=Blockly.Arduino.valueToCode(this,"DEGREE",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.definitions_.define_servo="#include <Servo.h>\n";Blockly.Arduino.definitions_["var_servo"+a]="Servo servo_"+a+";\n";Blockly.Arduino.setups_["setup_servo_"+a]="servo_"+a+".attach("+a+");\n";return"servo_"+a+".write("+b+");\n"};
Blockly.Arduino.servo_read_degrees=function(){var a=this.getFieldValue("PIN");Blockly.Arduino.definitions_.define_servo="#include <Servo.h>\n";Blockly.Arduino.definitions_["var_servo"+a]="Servo servo_"+a+";\n";Blockly.Arduino.setups_["setup_servo_"+a]="servo_"+a+".attach("+a+");\n";return"servo_"+a+".read()"};Blockly.Arduino.serial_print=function(){Blockly.Arduino._serial_setup();return"Serial.println("+(Blockly.Arduino.valueToCode(this,"CONTENT",Blockly.Arduino.ORDER_ATOMIC)||"0")+");\n"};
Blockly.Arduino.serial_read_until=function(){Blockly.Arduino._serial_setup();var a=Blockly.Arduino.valueToCode(this,"CONTENT",Blockly.Arduino.ORDER_ATOMIC)||"|";return["Serial.readStringUntil("+(-1<a.indexOf('"')?a.replace(/"/g,"'"):a+"[0]")+")",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino._serial_setup=function(){var a=document.getElementById("usb-speeds");Blockly.Arduino.setups_["setup_serial_"+profile["default"].serial]="Serial.begin("+a.options[a.selectedIndex].value+");\n"};Blockly.Arduino.json={};
Blockly.Arduino.json_get_data=function(a){Blockly.Arduino.definitions_.define_json="#include <ArduinoJson.h>\n";Blockly.Arduino.definitions_.json_parse_functions="";for(var b=0;b<VARIABLE_TYPES.length;b+=1)console.log(VARIABLE_TYPES[b][1],"variable Type"),Blockly.Arduino.definitions_.json_parse_functions+=VARIABLE_TYPES[b][1]+" parseJSON"+VARIABLE_TYPES[b][1].toUpperCase()+"(String jsonString, String key) { \n\tDynamicJsonBuffer  jsonBuffer; \n\tJsonObject& root = jsonBuffer.parseObject(jsonString);\n\treturn root[key];\n}\n";b=
a.getFieldValue("DATA TYPE");var c=Blockly.Arduino.valueToCode(a,"KEY",Blockly.Arduino.ORDER_ATOMIC);a=Blockly.Arduino.valueToCode(a,"JSON STRING",Blockly.Arduino.ORDER_ATOMIC);return["parseJSON"+b.toUpperCase()+"("+a+", "+c+")",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.bluetooth={};
Blockly.Arduino.bluetooth_setup=function(a){var b=a.getFieldValue("RX"),c=a.getFieldValue("TX"),d=Blockly.Arduino.valueToCode(a,"NAME",Blockly.Arduino.ORDER_ATOMIC);a=Blockly.Arduino.valueToCode(a,"PIN",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.definitions_.define_bluetooth="#include <SoftwareSerial.h>\n SoftwareSerial blueToothSerial("+b+", "+c+"); \n";Blockly.Arduino.setups_.bluetooth_setup='blueToothSerial.begin(9600); \nblueToothSerial.write("AT+NAME'+d.replace(/"/g,"")+'"); \nblueToothSerial.write("AT+PIN'+
a+'"); \nblueToothSerial.write("AT+BAUD4"); \ndelay(1000); \n';return""};Blockly.Arduino.bluetooth_is_available=function(a){return["blueToothSerial.available()",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.bluetooth_read_until_string=function(a){return["blueToothSerial.readStringUntil("+Blockly.Arduino.valueToCode(a,"STRING VALUE",Blockly.Arduino.ORDER_ATOMIC)+")",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.bluetooth_write=function(a){return"blueToothSerial.println("+Blockly.Arduino.valueToCode(a,"DATA",Blockly.Arduino.ORDER_ATOMIC)+"); \n\n"};Blockly.Arduino.texts={};Blockly.Arduino.text=function(){return[Blockly.Arduino.quote_(this.getFieldValue("TEXT")),Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.text_join=function(a){for(var b="",c=0;c<a.inputList.length;c+=1)"text"==a.getChildren()[c].type?(b+='"',b+=Blockly.Arduino.valueToCode(a,a.inputList[c].name,Blockly.Arduino.ORDER_ATOMIC).replace(/"/g,"").toString(),b+='"'):b=a.getChildren()[c].outputConnection.check_&&-1<a.getChildren()[c].outputConnection.check_.indexOf("String")?b+Blockly.Arduino.valueToCode(a,a.inputList[c].name,Blockly.Arduino.ORDER_ATOMIC).toString():b+("String("+Blockly.Arduino.valueToCode(a,a.inputList[c].name,
Blockly.Arduino.ORDER_ATOMIC).replace(/"/g,"").toString()+")"),c<a.inputList.length-1&&(b+=" + ");return[b,Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.text_remove_char=function(a){var b=Blockly.Arduino.valueToCode(a,"String Variable",Blockly.Arduino.ORDER_ATOMIC);a=Blockly.Arduino.valueToCode(a,"INDEX",Blockly.Arduino.ORDER_ATOMIC);return b+".remove("+a+"); \n"};
Blockly.Arduino.text_length=function(a){return[Blockly.Arduino.valueToCode(a,"String Variable",Blockly.Arduino.ORDER_ATOMIC)+".length()",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.text_value_to_string=function(a){return["String("+Blockly.Arduino.valueToCode(a,"VALUE",Blockly.Arduino.ORDER_ATOMIC)+")",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.text_get_part_of_string=function(a){var b=Blockly.Arduino.valueToCode(a,"VALUE",Blockly.Arduino.ORDER_ATOMIC),c=Blockly.Arduino.valueToCode(a,"PARSING_CHAR",Blockly.Arduino.ORDER_ATOMIC).replace(/"/g,"'");a=Blockly.Arduino.valueToCode(a,"INDEX",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.definitions_.text_get_part_of_string='String getParseValue(String data, char separator, int index) { \n\tint found = 0;\tint strIndex[] = {0, -1}; \n\tint maxIndex = data.length()-1; \n\tfor(int i=0; i<=maxIndex && found<=index; i++){   \n\t    if(data.charAt(i)==separator || i==maxIndex){    \n\t        found++;                      \n\t        strIndex[0] = strIndex[1]+1;    \n\t        strIndex[1] = (i == maxIndex) ? i+1 : i;    \n\t    }                            \n\t}                     \n\treturn found>index ? data.substring(strIndex[0], strIndex[1]) : ""; \n }\n';
return["getParseValue("+b+", "+c+", "+a+")",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.debug={};
Blockly.Arduino.debug=function(a){var b=Blockly.Variables.allVariables(Blockly.mainWorkspace);Blockly.Arduino._serial_setup();for(var c='\n\nvoid debug(int blockNumber) { \n\t\tString stopDebug = ""; \n',d=0;d<b.length;d+=1){var e=Blockly.Names.prototype.safeName_(b[d]);c+='\t\tSerial.println("Variable:  name = '+e+' - value =  " + String('+e+")); \n"}Blockly.Arduino.definitions_.debug_function=c+'\t\tSerial.println("Debugging Block " + String(blockNumber) + " ");\n\n\t\twhile (stopDebug != "s") { \n\t\t\tstopDebug = Serial.readStringUntil("s"); \n\t\t\tdelay(1000);  \n\t\t}\n}\n';return"debug("+
a.id+"); \n"};